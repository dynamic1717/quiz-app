{"version":3,"sources":["components/Navbar.js","components/AnswerOption.js","hooks/toast.hook.js","pages/CreateQuizPage.js","pages/StartPage.js","components/Result.js","components/Loader.js","pages/RandomQuizPage.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["Navbar","className","style","backgroundColor","height","href","flexDirection","justifyContent","width","to","AnswerOption","index","handleChange","choseCorrect","correct","answers","Form","Control","placeholder","id","value","type","onChange","event","maxLength","OverlayTrigger","placement","overlay","Tooltip","onClick","e","data-bs-toggle","data-bs-placement","title","useToast","useState","show","setShow","text","setText","toast","Toast","onClose","delay","autohide","Body","showToast","reqText","CreateQuizPage","question","setQuestion","setAnswers","count","setCount","setCorrect","newAnswers","slice","target","preventDefault","createHandler","a","trim","length","axios","post","data","console","log","Group","controlId","as","resize","required","Array","from","map","item","StartPage","Result","isCorrect","setIsAnswered","fetchRandomQuiz","color","Loader","Spinner","animation","role","RandomQuizPage","quiz","setQuiz","setIsCorrect","isAnswered","isReported","setIsReported","get","fetched","handleReport","useEffect","answer","checkAnswer","disabled","App","routes","path","exact","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23999afc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <nav\r\n      className='navbar navbar-light'\r\n      style={{ backgroundColor: 'var(--main-green)', height: '75px' }}\r\n    >\r\n      <div className='container-fluid'>\r\n        <a className='navbar-brand' href='/'>\r\n          Quiz App\r\n        </a>\r\n        <ul\r\n          className='navbar-nav me-auto mb-2 mb-lg-0'\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-around',\r\n            width: '300px',\r\n          }}\r\n        >\r\n          <li className='nav-item'>\r\n            <NavLink to='/create' className='nav-link'>\r\n              Create a quiz\r\n            </NavLink>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <NavLink to='/random' className='nav-link'>\r\n              Random quiz\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { OverlayTrigger, Tooltip, Form } from 'react-bootstrap'\r\nimport { BsCheckCircle } from 'react-icons/bs'\r\n\r\nexport const AnswerOption = ({\r\n  index,\r\n  handleChange,\r\n  choseCorrect,\r\n  correct,\r\n  answers,\r\n}) => {\r\n  return (\r\n    <div className='d-flex justify-content-center align-items-center mb-3'>\r\n      <Form.Control\r\n        placeholder={`Answer option ${index + 1}`}\r\n        id={`answer${index}`}\r\n        value={answers[index] || ''}\r\n        type='text'\r\n        className='form-control mr-2'\r\n        onChange={(event) => handleChange(event, index)}\r\n        maxLength='50'\r\n      />\r\n\r\n      <OverlayTrigger\r\n        placement='top'\r\n        overlay={\r\n          <Tooltip id={`tooltip-top`}>Set this answer as correct</Tooltip>\r\n        }\r\n      >\r\n        <button\r\n          className='btn btn-sm'\r\n          onClick={(e) => choseCorrect(e, index)}\r\n          style={\r\n            index === correct\r\n              ? { backgroundColor: 'var(--main-green)' }\r\n              : { backgroundColor: 'var(--light)' }\r\n          }\r\n          data-bs-toggle='tooltip'\r\n          data-bs-placement='top'\r\n          title='Set this answer as correct'\r\n        >\r\n          <BsCheckCircle />\r\n          Correct\r\n        </button>\r\n      </OverlayTrigger>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { Toast } from 'react-bootstrap'\r\n\r\nexport const useToast = () => {\r\n  const [show, setShow] = useState(false)\r\n  const [text, setText] = useState('')\r\n\r\n  const showToast = (reqText) => {\r\n    setText(reqText)\r\n    setShow(true)\r\n  }\r\n\r\n  const toast = () => {\r\n    return (\r\n      <Toast show={show} onClose={() => setShow(false)} delay={3000} autohide>\r\n        <Toast.Body>{text}</Toast.Body>\r\n      </Toast>\r\n    )\r\n  }\r\n\r\n  return { toast, showToast }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\nimport { AnswerOption } from '../components/AnswerOption'\r\nimport { Form } from 'react-bootstrap'\r\nimport { useToast } from '../hooks/toast.hook'\r\nimport axios from 'axios'\r\n\r\nexport const CreateQuizPage = () => {\r\n  const { toast, showToast } = useToast()\r\n  const [question, setQuestion] = useState('')\r\n  const [answers, setAnswers] = useState([])\r\n  const [count, setCount] = useState(2)\r\n  const [correct, setCorrect] = useState(null)\r\n\r\n  const changeCount = () => {\r\n    let newCount = count + 1\r\n    setCount(newCount)\r\n  }\r\n\r\n  const handleChange = (event, index) => {\r\n    const newAnswers = [\r\n      ...answers.slice(0, index),\r\n      event.target.value,\r\n      ...answers.slice(index + 1),\r\n    ]\r\n    setAnswers(newAnswers)\r\n  }\r\n\r\n  const choseCorrect = (e, index) => {\r\n    e.preventDefault()\r\n    setCorrect(index)\r\n  }\r\n\r\n  const createHandler = async () => {\r\n    const formattedQuestion = question.trim()\r\n    if (formattedQuestion && correct >= 0 && answers.length >= 2) {\r\n      try {\r\n        const data = await axios.post('/api/quiz/create', {\r\n          question,\r\n          answers,\r\n          correct,\r\n        })\r\n        console.log('Data', data.data)\r\n        setQuestion('')\r\n        setAnswers([])\r\n        setCount(2)\r\n        setCorrect(null)\r\n        showToast('Quiz has been created!')\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    } else {\r\n      showToast('You did not complete the fields')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex flex-column justify-content-center align-items-center'>\r\n      <h1>Create a quiz</h1>\r\n\r\n      <div className='card mb-3' style={{ width: '60%' }}>\r\n        <div className='card-body text-center'>\r\n          <Form>\r\n            <Form.Group controlId='question'>\r\n              <Form.Control\r\n                as='textarea'\r\n                placeholder='Enter your question'\r\n                value={question}\r\n                onChange={(e) => setQuestion(e.target.value)}\r\n                style={{ height: '100px', resize: 'none' }}\r\n                maxLength={300}\r\n                required='true'\r\n              />\r\n            </Form.Group>\r\n\r\n            {Array.from(Array(count)).map((item, index) => {\r\n              return (\r\n                <AnswerOption\r\n                  key={index}\r\n                  index={index}\r\n                  handleChange={handleChange}\r\n                  choseCorrect={choseCorrect}\r\n                  correct={correct}\r\n                  answers={answers}\r\n                />\r\n              )\r\n            })}\r\n          </Form>\r\n\r\n          {count < 5 && (\r\n            <button className='btn btn-outline' onClick={changeCount}>\r\n              <BsPlusCircle />\r\n              &nbsp;Add another answer option\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        type='submit'\r\n        className='btn btn-lg btn-main'\r\n        onClick={createHandler}\r\n      >\r\n        Create This Quiz\r\n      </button>\r\n      <div className='toast-wrapper'>{toast()}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const StartPage = () => {\r\n  return (\r\n    <div className='text-center d-flex flex-column justify-content-center align-items-center'>\r\n      <h1>Welcome!</h1>\r\n      <div className='card' style={{ width: '70%' }}>\r\n        <div className='card-body'>\r\n          <h5 className='card-title'>\r\n            Create your own quizzes and answer other users' quizzes!\r\n          </h5>\r\n          <p>\r\n            By clicking on *Get Random Quiz* you get a random quiz and try to\r\n            answer it. If there is questionable content in the quiz or if you\r\n            are sure that the result is incorrect, you can report the quiz.\r\n            <br />\r\n            <br />\r\n            With the *Create a Quiz* button you can create a quiz with your\r\n            question and answer options. Among the answers you have entered,\r\n            choose the one that is correct. Once you have filled in all the\r\n            fields, upload the quiz.\r\n          </p>\r\n          <div className='d-flex justify-content-center align-items-center'>\r\n            <Link to='/random' className='btn btn-lg btn-main mr-4'>\r\n              Get Random Quiz\r\n            </Link>\r\n            <Link to='/create' className='btn btn-lg btn-main'>\r\n              Create a Quiz\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Result = ({ isCorrect, setIsAnswered, fetchRandomQuiz }) => {\r\n  return (\r\n    <div className='card result'>\r\n      {isCorrect ? (\r\n        <h2 style={{ color: 'var(--main-green)' }}>Correct answer!</h2>\r\n      ) : (\r\n        <h2 style={{ color: 'var(--main-red)' }}>Wrong answer</h2>\r\n      )}\r\n      <div>\r\n        {!isCorrect && (\r\n          <button\r\n            className='btn btn-main mr-2'\r\n            onClick={() => setIsAnswered(false)}\r\n          >\r\n            Try Again\r\n          </button>\r\n        )}\r\n        <button className='btn btn-main' onClick={fetchRandomQuiz}>\r\n          Get Another\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div\r\n      className='d-flex justify-content-center align-items-center'\r\n      style={{ height: '100px', color: 'var(--main-green)' }}\r\n    >\r\n      <Spinner animation='grow' role='status'>\r\n        <span className='sr-only'>Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BsExclamationCircle } from 'react-icons/bs'\r\nimport { Result } from '../components/Result'\r\nimport { useToast } from '../hooks/toast.hook'\r\nimport { Loader } from '../components/Loader'\r\nimport axios from 'axios'\r\n\r\nexport const RandomQuizPage = () => {\r\n  const { toast, showToast } = useToast()\r\n  const [quiz, setQuiz] = useState(null)\r\n  const [isCorrect, setIsCorrect] = useState(null)\r\n  const [isAnswered, setIsAnswered] = useState(false)\r\n  const [isReported, setIsReported] = useState(false)\r\n\r\n  const fetchRandomQuiz = async () => {\r\n    setIsCorrect(false)\r\n    setIsAnswered(false)\r\n    setIsReported(false)\r\n    setQuiz(null)\r\n    try {\r\n      const fetched = await axios.get('/api/quiz/random')\r\n      setQuiz(fetched.data[0])\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const checkAnswer = (index) => {\r\n    if (index === quiz.correct) {\r\n      setIsCorrect(true)\r\n    }\r\n    setIsAnswered(true)\r\n  }\r\n\r\n  const handleReport = async () => {\r\n    try {\r\n      await axios.post('/api/quiz', quiz)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    setIsReported(true)\r\n    showToast('Quiz reported')\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRandomQuiz()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <h1>Random Quiz</h1>\r\n      <div className='card text-center'>\r\n        {quiz ? (\r\n          <div className='card-body'>\r\n            <h3 className='mb-3'>{quiz.question}</h3>\r\n            <div className='d-flex flex-column justify-content-center align-items-center'>\r\n              {quiz.answers.map((answer, index) => {\r\n                return (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => checkAnswer(index)}\r\n                    disabled={isAnswered}\r\n                    type='button'\r\n                    className='btn btn-outline mb-3'\r\n                    style={{ height: '50px' }}\r\n                  >\r\n                    {answer}\r\n                  </button>\r\n                )\r\n              })}\r\n            </div>\r\n\r\n            <button className='btn btn-main' onClick={fetchRandomQuiz}>\r\n              Get Another\r\n            </button>\r\n\r\n            <button\r\n              className='btn btn-report'\r\n              onClick={handleReport}\r\n              disabled={isReported}\r\n            >\r\n              <BsExclamationCircle />\r\n              &nbsp;report\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n\r\n        {isAnswered && (\r\n          <Result\r\n            isCorrect={isCorrect}\r\n            setIsAnswered={setIsAnswered}\r\n            fetchRandomQuiz={fetchRandomQuiz}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className='toast-wrapper'>{toast()}</div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Navbar } from './components/Navbar'\nimport { useRoutes } from './routes'\n\nconst App = () => {\n  const routes = useRoutes()\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className='container' style={{ marginTop: '8%' }}>\n        {routes}\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { CreateQuizPage } from './pages/CreateQuizPage'\r\nimport { StartPage } from './pages/StartPage'\r\nimport { RandomQuizPage } from './pages/RandomQuizPage'\r\n\r\nexport const useRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/' exact>\r\n        <StartPage />\r\n      </Route>\r\n      <Route path='/create' exact>\r\n        <CreateQuizPage />\r\n      </Route>\r\n      <Route path='/random' exact>\r\n        <RandomQuizPage />\r\n      </Route>\r\n      <Redirect to='/' />\r\n    </Switch>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nreportWebVitals()\n"],"sourceRoot":""}